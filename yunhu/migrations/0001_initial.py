# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-11-25 11:10
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(help_text='\u59d3\u540d', max_length=50, verbose_name='\u59d3\u540d')),
                ('tel', models.CharField(blank=True, max_length=50, null=True, verbose_name='\u7535\u8bdd')),
                ('qq', models.CharField(max_length=50, verbose_name='QQ')),
                ('wechat', models.CharField(blank=True, max_length=50, null=True, verbose_name='\u5fae\u4fe1')),
                ('address', models.CharField(blank=True, max_length=50, null=True, verbose_name='\u4f4f\u5740')),
                ('identification', models.CharField(help_text='\u6807\u8bc6\u7801', max_length=255, verbose_name='\u6807\u8bc6\u7801')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ChannelModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='\u6e20\u9053\u540d\u79f0', max_length=50, verbose_name='\u6e20\u9053\u540d\u79f0')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='\u516c\u53f8\u540d\u79f0', max_length=50, verbose_name='\u516c\u53f8\u540d\u79f0')),
                ('contact', models.CharField(help_text='\u8054\u7cfb\u65b9\u5f0f', max_length=50, verbose_name='\u8054\u7cfb\u65b9\u5f0f')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerBlacklistModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerLoginInfoModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(verbose_name='IP')),
                ('login_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='\u59d3\u540d', max_length=50, verbose_name='\u59d3\u540d')),
                ('tel', models.CharField(blank=True, max_length=50, null=True, verbose_name='\u7535\u8bdd')),
                ('qq', models.CharField(max_length=50, verbose_name='QQ')),
                ('wechat', models.CharField(blank=True, max_length=50, null=True, verbose_name='\u5fae\u4fe1')),
                ('address', models.CharField(blank=True, max_length=50, null=True, verbose_name='\u4f4f\u5740')),
                ('user', models.ForeignKey(help_text='\u6240\u5c5e\u7528\u6237', on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL, verbose_name='\u6240\u5c5e\u7528\u6237')),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='\u90e8\u95e8\u540d\u79f0', max_length=50, verbose_name='\u90e8\u95e8\u540d\u79f0')),
            ],
        ),
        migrations.CreateModel(
            name='XueXinAccountModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(help_text='\u8d26\u53f7', max_length=255, verbose_name='\u8d26\u53f7')),
                ('password', models.CharField(help_text='\u5bc6\u7801', max_length=255, verbose_name='\u5bc6\u7801')),
                ('customer', models.ForeignKey(help_text='\u5ba2\u6237', on_delete=django.db.models.deletion.CASCADE, related_name='xuexin', to='yunhu.CustomerModel', verbose_name='\u5ba2\u6237')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ZhiMaAccountModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(help_text='\u8d26\u53f7', max_length=255, verbose_name='\u8d26\u53f7')),
                ('password', models.CharField(help_text='\u5bc6\u7801', max_length=255, verbose_name='\u5bc6\u7801')),
                ('customer', models.ForeignKey(help_text='\u5ba2\u6237', on_delete=django.db.models.deletion.CASCADE, related_name='zhima', to='yunhu.CustomerModel', verbose_name='\u5ba2\u6237')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='customerlogininfomodel',
            name='customer',
            field=models.ForeignKey(help_text='\u5ba2\u6237', on_delete=django.db.models.deletion.CASCADE, related_name='login_info', to='yunhu.CustomerModel', verbose_name='\u5ba2\u6237'),
        ),
        migrations.AddField(
            model_name='customerblacklistmodel',
            name='customer',
            field=models.ForeignKey(help_text='\u5ba2\u6237', on_delete=django.db.models.deletion.CASCADE, related_name='blacklist', to='yunhu.CustomerModel', verbose_name='\u5ba2\u6237'),
        ),
        migrations.AddField(
            model_name='user',
            name='channel',
            field=models.ManyToManyField(help_text='\u6e20\u9053', related_name='user', to='yunhu.ChannelModel', verbose_name='\u6e20\u9053'),
        ),
        migrations.AddField(
            model_name='user',
            name='company',
            field=models.ForeignKey(help_text='\u6240\u5c5e\u516c\u53f8', on_delete=django.db.models.deletion.CASCADE, related_name='user', to='yunhu.CompanyModel', verbose_name='\u6240\u5c5e\u516c\u53f8'),
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(help_text='\u90e8\u95e8\u540d\u79f0', on_delete=django.db.models.deletion.CASCADE, related_name='user', to='yunhu.DepartmentModel', verbose_name='\u90e8\u95e8\u540d\u79f0'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='customerlogininfomodel',
            unique_together=set([('customer', 'ip')]),
        ),
    ]
